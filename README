# Connecting Spring Boot with MongoDB

There are two ways to link Spring Boot with MongoDB:

## 1. Using Docker Link

(a) Pull the latest Docker MongoDB image:
    docker pull mongo:latest

(b) Run the Docker MongoDB image:
    docker run -d -p 27017:27017 --name springmongodb

(c) Create a `Dockerfile` and `application.yml`. Add MongoDB details as mentioned above.

(d) Run Maven build to generate the JAR file inside the `target` folder.

(e) Build the Spring Boot project Docker image:

    docker build -t springboot-mongodb:1.0 .


(f) Link the project with the MongoDB container:
 docker run -p 8080:8080 --name springboot-mongodb --link springmongodb:mongo -d springboot-mongodb:1.0



(g) Use Postman to test and populate the collection.

(h) Access the MongoDB terminal inside the container:
docker exec -it springmongodb /bin/sh


(i) Run these commands to interact with the MongoDB:
mongosh
show dbs
use Books
show collections
db.book.find().pretty()


## 2. Using Docker Compose

Simply run the following command from the directory where `docker-compose.yml` is present:
docker-compose up







#to link spring boot with mongo there are two ways to do so:
1. using docker link
 (a) Pull docker mongo image : docker pull mongo:latest >> Run "docker images" to check the image installed or not
 (b) Run docker mongo image : docker run -d -p 27014:27014 --name springmongodb >> Run "docker ps" to check the container is running or not
 (c) Create Dockerfile and application.yml add mongo details as mentioned above
 (d) run maven build to generate the jar file inside the target folder
 (e) Build springboot project : docker build -t springboot-mongodb:1.0 .
 (f) link the project with mongo image : docker run -p 8080:8080 --name springboot-mongodb --link springmongodb:mongo -d springboot-mongodb:1.0
 (g) Use postman to test it and populate the collection
 (h) Run this command to open terminal of the mongo image : docker exec -it springmongodb /bin/sh
 (i) Run this list of commands to see the content inside mongo db: mongosh , show dbs, use Books, show collections, db.book.find().pretty()


#2. using docker compose --> here you just need to run the command : "docker-compose up" from the path where docker compose present
